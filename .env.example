# Video Intelligence Platform Environment Configuration
# Copy this file to .env and fill in your actual values
# NEVER commit .env with real credentials to version control

# ====================
# AWS Configuration
# ====================
# AWS credentials for S3 and Rekognition access
AWS_ACCESS_KEY_ID=your-aws-access-key-here
AWS_SECRET_ACCESS_KEY=your-aws-secret-key-here
AWS_DEFAULT_REGION=us-east-1

# S3 bucket names (must exist in your AWS account)
S3_BUCKET=your-input-bucket-name
S3_OUTPUT_BUCKET=your-output-bucket-name

# ====================
# Database Configuration
# ====================
# MongoDB connection string
# For local development with Docker: mongodb://mongodb:27017/video-intelligence
# For production: use your MongoDB Atlas or self-hosted URL
MONGODB_URL=mongodb://localhost:27017/video-intelligence

# Redis connection string
# For local development with Docker: redis://redis:6379
# For production: use your Redis Cloud or self-hosted URL
REDIS_URL=redis://localhost:6379

# ====================
# AI Provider API Keys
# ====================
# OpenAI API key (required for GPT models)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-...your-openai-key-here

# NVIDIA API key (optional, for VILA video analysis)
# Get from: https://build.nvidia.com/
NVIDIA_API_KEY=nvapi-...your-nvidia-key-here

# Anthropic API key (optional, for Claude models)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-...your-anthropic-key-here

# ElevenLabs API key (optional, for voice synthesis)
# Get from: https://elevenlabs.io/
ELEVENLABS_API_KEY=sk_...your-elevenlabs-key-here

# ====================
# Vector Database Configuration
# ====================
# Vector database type: chromadb, milvus, or pinecone
VECTOR_DB_TYPE=chromadb

# ChromaDB configuration (if using ChromaDB)
CHROMA_HOST=localhost
CHROMA_PORT=8000

# Pinecone configuration (if using Pinecone)
# Get from: https://www.pinecone.io/
PINECONE_API_KEY=your-pinecone-key-here
PINECONE_ENVIRONMENT=your-pinecone-environment

# Milvus configuration (if using Milvus)
MILVUS_HOST=localhost
MILVUS_PORT=19530

# ====================
# Application Configuration
# ====================
# FastAPI configuration
API_HOST=0.0.0.0
API_PORT=8003
API_RELOAD=true
API_LOG_LEVEL=info

# Celery configuration
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
CELERY_WORKER_CONCURRENCY=4
CELERY_WORKER_MAX_MEMORY_PER_CHILD=2048000  # 2GB in KB

# ====================
# Feature Flags & Limits
# ====================
# Maximum frames to extract per video for NVIDIA processing
NVIDIA_MAX_FRAMES_PER_VIDEO=100

# Enable/disable specific features
ENABLE_KNOWLEDGE_GRAPH=true
ENABLE_EMBEDDINGS=true
ENABLE_CONVERSATION=true

# ====================
# Security Configuration
# ====================
# JWT secret for authentication (generate a strong random string)
# Example: openssl rand -hex 32
JWT_SECRET=your-secret-key-here-change-in-production

# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8003

# ====================
# Monitoring & Logging
# ====================
# Log level: debug, info, warning, error, critical
LOG_LEVEL=info

# Sentry DSN (optional, for error tracking)
# Get from: https://sentry.io/
SENTRY_DSN=

# ====================
# AWS Deployment Configuration (GitHub Actions)
# ====================
# These are used by GitHub Actions for deployment
# Configure these as GitHub Secrets, not in .env
# AWS_ACCOUNT_ID=123456789012
# AWS_ECR_REPOSITORY=video-intelligence-backend
# AWS_ECS_CLUSTER=video-intelligence-cluster
# AWS_ECS_SERVICE_API=video-intelligence-api
# AWS_ECS_SERVICE_WORKER=video-intelligence-worker